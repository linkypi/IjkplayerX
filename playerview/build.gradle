apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
group='com.github.Rukey7'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.2"

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:24.2.0'
    testCompile 'junit:junit:4.12'
    // ijkplayer
    compile 'tv.danmaku.ijk.media:ijkplayer-java:0.6.2'
    compile 'tv.danmaku.ijk.media:ijkplayer-armv7a:0.6.2'
    // Danmaku
    compile 'com.github.ctiao:DanmakuFlameMaster:0.5.5'

//    compile 'com.github.christophesmet:android_maskable_layout:master'
}

//apply plugin: 'maven'
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            configuration = configurations.deployerJars
//            repository(url: "file://localhost/" //+ System.getenv("ANDROID_HOME")
//                    + "E:/Software/apache-maven-3.3.9/repository/extras/android/m2repository/")
//            pom.version = '1.0.0'
//            pom.groupId = 'ijkplayer'
//            pom.artifactId = 'ijkplayer'
//        }
//    }
//}

//task createPom {
//    apply plugin: 'maven'
//    description "Generates pom.xml"
//    pom {
//        project {
//            groupId 'com.github.Rukey7'
//            artifactId 'playerview'
//            version '0.0.1-SNAPSHOT'
//            packaging 'aar'
//        }
//    }.withXml {
//        def dependenciesNode = asNode().appendNode('dependencies')
//
//        configurations.compile.allDependencies.each { dependency ->
//            def dependencyNode = dependenciesNode.appendNode('dependency')
//            dependencyNode.appendNode('groupId', dependency.group)
//            dependencyNode.appendNode('artifactId', dependency.name)
//            dependencyNode.appendNode('version', dependency.version)
//        }
//    }.writeTo("$buildDir/pom.xml")
//}

task makeJar(type: Copy){
    delete 'build/libs/ijkplayer.jar'
    from('build/intermediates/bundles/release/')
    into('build/libs/')
    include('classes.jar')
    rename('classes.jar','ijkplayer.jar')
}
makeJar.dependsOn(build)
